"""
Django settings for crh project.

Generated by "django-admin startproject" using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os

import dj_database_url

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / "subdir".
BASE_DIR = Path(__file__).resolve().parent                           # /srv/app/server
APP_PATH = os.path.join(os.path.dirname(__file__), os.pardir, os.pardir)    # /srv/app/server/crh/../..

print("BASE_DIR test", BASE_DIR)
print("APP_PATH test", APP_PATH)

def get_secret_key():
    SECRET_LOCATION = "~/private/"
    SECRET_FILE = "crh.secret.key"

    try:
        with open(os.path.join(SECRET_LOCATION, SECRET_FILE), "r") as f:
            return f.read().rstrip()
    except (FileNotFoundError, PermissionError) as e:
        print("Error: must put secret file in the correct secret location. {}".format(e))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_secret_key()

# SECURITY WARNING: don"t run with debug turned on in production!
debug_env_var = os.environ.get("DEBUG", False)
if debug_env_var == "true":
    DEBUG = True
else:
    DEBUG = False

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "crh",
    "api",
    "blog",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "crh.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "crh.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

print("TEST DJ CONFIG", dj_database_url.config())
DATABASES = {
    "default": dj_database_url.config(
        env="DATABASE_URL",
    ),
    #"default": {
    #    "ENGINE": "django.db.backends.postgresql",
    #    "NAME": "crhall",
    #    "USER": "crhall",
    #    "PASSWORD": "crhall",
    #    "HOST": "localhost",
    #    "PORT": "5432",
    #}
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
