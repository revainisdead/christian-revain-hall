#[tool.black]
[tool:black]
line-length = 130
#include = '\.pyi?$'

[pep8]
max-line-length=99

[flake8]
max-line-length=99
#max-complexity=18

# List of 'pycodestyle' error codes: https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes
#
# F403: 'from module import' used
# E501: line length too long (79)
# W503: operator on new line detected (swapping)
ignore = F403
         E501,
         W503
# E203: whitespace before , (comma) ; (semicolon) : (and colon)
# E231: missing whitespace after , (comma) ; (semicolon) : (and colon)
extend-ignore = E203,
                E231

# List of single letter warnings: https://flake8.pycqa.org/en/latest/user/violations.html#selecting-violations-with-flake8
# List of B warnings: https://github.com/PyCQA/flake8-bugbear#list-of-warnings
#
# B009: Do not call getattr(x, 'attr'), instead use normal property access: x.attr.
# Missing a default to getattr will cause an AttributeError to be raised for non-existent properties.
# There is no additional safety in using getattr if you know the attribute name ahead of time.
#
# B950: Line too long. This is a pragmatic equivalent of pycodestyle's E501: it considers "max-line-length" but only
# triggers when the value has been exceeded by more than 10%. You will no longer be forced to reformat code due to the
# closing parenthesis being one character too far to satisfy the linter. At the same time, if you do significantly
# violate the line length, you will receive a message that states what the actual limit is. This is inspired by
# Raymond Hettinger's "Beyond PEP 8" talk and highway patrol not stopping you if you drive < 5mph too fast.
# Disable E501 to avoid duplicate warnings. Like E501, this error ignores long shebangs on the first line and
# urls or paths that are on their own line.
select = C,E,F,W,B,B950

exclude = migrations
          media

[nodeenv]
node = 12.0.0 # even numbers are lts
npm = 12.22.8 # v12-lts

[tool:pytest]
python_files = tests.py *_tests.py *_pytests.py test_*.py
python_classes = *Test *TestCase *Tests
